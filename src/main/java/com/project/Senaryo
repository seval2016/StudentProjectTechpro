STUDENT MANAGEMENT PROJECT KICK OFF DOCUMENT

Project Name: STUDENT MANAGEMENT WEB APPLICATION PROJECT

Definition: The Student-Management application is a web application which is able to manage
education directly by using a web browser in your computer, phone, tablet, or mobile device. There
will be different types of user in the Student-Management application. Users are able to login into
application.

STUDENT MANAGEMENT WEB APPLICATION CUSTOMER REQUIREMENTS

 1. Student-Management Application must be a web application.
     Öğrenci Yönetim Uygulaması bir web uygulaması olmalıdır.
 2. The application must have user friendly UI. (Non functional requirement)
     Uygulamanın kullanıcı dostu bir arayüzü olmalıdır. (İşlevsel olmayan gereklilik)
 3. The application must be secure. (Non functional requirement)
     Uygulama güvenli olmalıdır. (İşlevsel olmayan gereklilik)
 4. Language of the application must be English. (Non functional requirement)
     Uygulamanın dilinin İngilizce olması gerekmektedir. (İşlevsel olmayan gereklilik)
 5. The application must display response of user request nearby for 5 seconds. (Non functional requirement)
    Uygulama, kullanıcının isteğine yanıtı yaklaşık 5 saniye içinde göstermelidir. (İşlevsel olmayan gereklilik)
 6. Anonymous users who will make a process should be able to register this application with their own information
     Bir işlem yapacak olan anonim kullanıcılar, kendi bilgileri ile bu uygulamaya kayıt olabilmelidir.
 7. There should be able five types of roles for authorized user: Admin, Teacher, Student, Manager, Assistant Manager
    Yetkili kullanıcılar için beş farklı rol bulunmalıdır: Admin, Öğretmen, Öğrenci, Müdür, Yardımcı Müdür
 8. Each user can only have one role ( a user with the teacher role can also have the advisor teacher role at the same time)
     Her kullanıcı sadece bir role sahip olabilir (yalnız öğretmen rolüne sahip bir kullanıcı aynı zamanda danışman öğretmen rolüne de sahip olabilir)
 9. Registered user should be able to login to the application after registration
    Kayıtlı kullanıcılar kayıttan sonra uygulamaya giriş yapabilmelidir.
10. Authenticated user should be able to update its own user information
    Kimlik doğrulama yapılmış kullanıcı, kendi kullanıcı bilgilerini güncelleyebilmelidir.
11. Authenticated user should be able to update its own password
    Kimlik doğrulama yapılmış kullanıcı, kendi şifresini güncelleyebilmelidir.
12. User who has the admin role should be able to get all users’ information
    Admin rolüne sahip kullanıcı, tüm kullanıcı bilgilerini alabilmelidir.
13. User who has the Admin or Manager role should be able to get a user information
    Admin veya Müdür rolüne sahip kullanıcı kullanıcı bilgilerini alabilmelidir.
14. User who has the Admin or Manager or Assistant_Manager role should be able to update a teacher or student information
    Admin, Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, öğretmen veya öğrenci bilgisini güncelleyebilmelidir.
15. User who has the Admin role should be able to delete a user
    Admin rolüne sahip kullanıcı, bir kullanıcıyı silebilmelidir.
16. User who has the Manager role should be able to delete a user whoes role is Teacher or Student or Assistant_Manager
    Müdür rolüne sahip kullanıcı, Öğretmen, Öğrenci veya Yardımcı Müdür rolüne sahip bir kullanıcıyı silebilmelidir.
17. User who has the Assistant_Manager role should be able to delete a user whoes role is Teacher or Student
    Yardımcı Müdür rolüne sahip kullanıcı, Öğretmen veya Öğrenci rolüne sahip bir kullanıcıyı silebilmelidir.
18. User who has the Admin role should be able to update all user
    Admin rolüne sahip kullanıcı, tüm kullanıcıları güncelleyebilmelidir.
19. User who has the Manager or Assistant_Manager role should be able to update a user whoes role is Teacher or Student
    Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, Öğretmen veya Öğrenci rolüne sahip bir kullanıcıyı güncelleyebilmelidir.
20. User who has the Manager or Assistant_Manager role should be able to get a user by his/her name
    Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, bir kullanıcıyı adına göre alabilmelidir.
21. User who has the Manager or Assistant_Manager role should be able to add a lesson Program to a user whoes role is Teacher
    Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, Öğretmen rolüne sahip bir kullanıcıya ders programı ekleyebilmelidir.
22. User who has the Student role should be able to add a lesson Program to him/her
    Öğrenci rolüne sahip kullanıcı, kendi ders programını ekleyebilmelidir.
23. User who has the Admin or Manager or Assistant_Manager role should be able to get the status of user whoes role is Student.
    Admin, Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, Öğrenci rolüne sahip bir kullanıcının durumunu alabilmelidir.
24. User who has the Admin or Teacher role should be able to get informations of his/her students
    Admin veya Öğretmen rolüne sahip kullanıcı, kendi öğrencilerinin bilgilerini alabilmelidir.
25. User who has the Admin or Manager or Assistant_Manager role should be able to save AdvisorTeacher
    Admin veya Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, Danışman Öğretmeni kaydedebilmelidir.
26. User who has the Admin or Manager or Assistant_Manager role should be able to get all AdvisorTeachers
    Admin veya Müdür veya Yardımcı Müdür rolüne sahip kullanıcı, tüm Danışman Öğretmenleri alabilmelidir.

You will see usecase diagrams about StudentManagement project below :

Admin
---------------------
Create Users
Delete Users
getAllUsers
UpdateUsers
getUsersByName
addLessonProgramToTeacher
CRUD for Education Term
CRUD for Lesson & Lesson Program

Student
---------------------
getAllLessonProgram
getAllUnassignedLessonProgram
getAllAssignedLessonProgram
getAllLessonProgramByPage
getHisHerLessonProgram
getHisHerMeet
getHisHerLessonGrades

Teacher
---------------------
getAllLessonProgram
getAllUnassignedLessonProgram
getAllAssignedLessonProgram
getAllLessonProgramByPage
deleteMeet
saveMeet
updateMeet
getHisHerAllMeet
CRUD for StudentInfo

User - User Role
----------------
Student - Info - ETerm - Lesson Program - Lesson - Meet

User -> OneToOne   -> UserRole
User -> OneToMany  -> Student-Info
User -> ManyToMany -> Lesson-Program
User -> ManyToMany -> Meet

Lesson -> ManyToMany -> Lesson-Program

Lesson-Program -> ManyToMany -> Lesson
Lesson-Program -> ManyToOne  -> ETerm
Lesson-Program -> ManyToMany -> User

E.Term -> OneToMany -> Lesson-Program

Meet  -> ManyToMany -> User
Meet  -> ManyToOne -> User
